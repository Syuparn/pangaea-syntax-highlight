{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Pangaea",
	"patterns": [
		{
			"include": "#expressions"
		}
	],
	"repository": {
		"expressions": {
			"patterns": [
				{
					"include": "#keywords"
				},
				{
					"include": "#keywordVariables"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#rawStrings"
				},
				{
					"include": "#charStrings"
				},
				{
					"include": "#symbols"
				},
				{
					"include": "#methodSymbols"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#kwargVariables"
				},
				{
					"include": "#argVariables"
				},
				{
					"include": "#variables"
				},
				{
					"include": "#operators"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#expInts"
				},
				{
					"include": "#expFloats"
				},
				{
					"include": "#bins"
				},
				{
					"include": "#octs"
				},
				{
					"include": "#hexs"
				},
				{
					"include": "#ints"
				},
				{
					"include": "#floats"
				},
				{
					"include": "#chains"
				}
			]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.pangaea",
				"match": "\\b(if|else|return|raise|yield)(?![\\?\\!])\\b"
			},
			{
				"name": "keyword.control.stdin.pangaea",
				"match": "<>"
			}]
		},
		"keywordVariables": {
			"name": "variable.language.pangaea",
			"match": "\\b(self|true|false|nil|_)(?![\\?\\!])\\b"
		},
		"strings": {
			"name": "string.quoted.double.pangaea",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.pangaea",
					"match": "\\\\."
				},
				{
					"begin": "#\\{",
					"end": "\\}",
					"beginCaptures": {
						"0": {
							"name": "keyword.operator.embedded.pangaea"
						}
					},
					"endCaptures": {
						"0": {
							"name": "keyword.operator.embedded.pangaea"
						}
					},
					"patterns": [
						{
							"include": "#expressions"
						}
					]
				}
			]
		},
		"rawStrings": {
			"name": "string.quoted.other.pangaea",
			"begin": "`",
			"end": "`"
		},
		"charStrings": {
			"name": "string.quoted.other.pangaea",
			"match": "\\?(\\\\[snt\\\\]|[^\\r\\n\\\\])"
		},
		"symbols": {
			"name": "constant.character.pangaea",
			"match": "'([a-zA-Z_][a-zA-Z0-9_]*[\\!\\?]?)"
		},
		"methodSymbols": {
			"name": "constant.character.pangaea",
			"match": "'(<=>|===|!==|==|!=|>=|<=|<<|>>|/&|/\\||/\\^|/~|\\*\\*|\\-%|\\+%|//|\\+|\\-|\\*|>|<|!|/|%)"
		},
		"kwargVariables": {
			"name": "variable.language.pangaea",
			"match": "\\\\([a-zA-Z_][a-zA-Z0-9_]*[\\!\\?]?)"
		},
		"argVariables": {
			"name": "variable.language.pangaea",
			"match": "\\\\[0-9]*"
		},
		"variables": {
			"name": "variable.parameter.pangaea",
			"match": "([a-zA-Z_][a-zA-Z0-9_]*[\\!\\?]?)"
		},
		"operators": {
			"name": "keyword.operator.pangaea",
			"match": "(<=>|===|!==|==|!=|>=|<=|<<|>>|/&|/\\||/\\^|/~|\\*\\*|\\-%|\\+%|//|\\+|\\-|\\*|>|<|!|/|%)"
		},
		"comments": {
			"name": "comment.line.pangaea",
			"begin": "#",
			"end": "\\n"
		},
		"expInts": {
			"name": "constant.numeric.pangaea",
			"match": "-?([0-9][0-9_]*[0-9]|[0-9]+)[eE]-?[0-9]+"
		},
		"expFloats": {
			"name": "constant.numeric.pangaea",
			"match": "-?([0-9][0-9_]*[0-9]|[0-9]*)\\.([0-9][0-9_]*[0-9]|[0-9]+)[eE]-?[0-9]+"
		},
		"bins": {
			"name": "constant.numeric.pangaea",
			"match": "-?0[bB]([01][01_]*[01]|[01]+)"
		},
		"octs": {
			"name": "constant.numeric.pangaea",
			"match": "-?0[oO]([0-7][0-7_]*[0-7]|[0-7]+)"
		},
		"hexs": {
			"name": "constant.numeric.pangaea",
			"match": "-?0[xX]([0-9a-fA-F][0-9a-fA-F_]*[0-9a-fA-F]|[0-9a-fA-F]+)"
		},
		"ints": {
			"name": "constant.numeric.pangaea",
			"match": "-?([0-9][0-9_]*[0-9]|[0-9]+)"
		},
		"floats": {
			"name": "constant.numeric.pangaea",
			"match": "-?([0-9][0-9_]*[0-9]|[0-9]*)\\.([0-9][0-9_]*[0-9]|[0-9]+)"
		},
		"chains": {
			"name": "keyword.control.chain.pangaea",
			"match": "[&=~]?[\\.@\\$]"	
		}
	},
	"scopeName": "source.pangaea"
}